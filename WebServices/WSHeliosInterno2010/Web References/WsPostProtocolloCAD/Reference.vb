'------------------------------------------------------------------------------
' <auto-generated>
'     Il codice è stato generato da uno strumento.
'     Versione runtime:4.0.30319.34209
'
'     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
'     il codice viene rigenerato.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Il codice sorgente è stato generato automaticamente da Microsoft.VSDesigner, versione 4.0.30319.34209.
'
Namespace WsPostProtocolloCAD
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceProtSoap", [Namespace]:="http://intranet.serviziocivile.it")>  _
    Partial Public Class ServiceProt
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private BeginStartPostProtocolloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SpedizioniOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InviaProtcolloPECOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.WSHeliosInterno.My.MySettings.Default.WSHeliosInterno_WsPostProtocolloCAD_ServiceProt
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event BeginStartPostProtocolloCompleted As BeginStartPostProtocolloCompletedEventHandler
        
        '''<remarks/>
        Public Event SpedizioniCompleted As SpedizioniCompletedEventHandler
        
        '''<remarks/>
        Public Event InviaProtcolloPECCompleted As InviaProtcolloPECCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://intranet.serviziocivile.it/BeginStartPostProtocollo", RequestNamespace:="http://intranet.serviziocivile.it", ResponseNamespace:="http://intranet.serviziocivile.it", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BeginStartPostProtocollo(ByVal CodDoc As String, ByVal Tipo As String, ByVal Cognome As String, ByVal Nome As String) As Boolean
            Dim results() As Object = Me.Invoke("BeginStartPostProtocollo", New Object() {CodDoc, Tipo, Cognome, Nome})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BeginStartPostProtocolloAsync(ByVal CodDoc As String, ByVal Tipo As String, ByVal Cognome As String, ByVal Nome As String)
            Me.BeginStartPostProtocolloAsync(CodDoc, Tipo, Cognome, Nome, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BeginStartPostProtocolloAsync(ByVal CodDoc As String, ByVal Tipo As String, ByVal Cognome As String, ByVal Nome As String, ByVal userState As Object)
            If (Me.BeginStartPostProtocolloOperationCompleted Is Nothing) Then
                Me.BeginStartPostProtocolloOperationCompleted = AddressOf Me.OnBeginStartPostProtocolloOperationCompleted
            End If
            Me.InvokeAsync("BeginStartPostProtocollo", New Object() {CodDoc, Tipo, Cognome, Nome}, Me.BeginStartPostProtocolloOperationCompleted, userState)
        End Sub
        
        Private Sub OnBeginStartPostProtocolloOperationCompleted(ByVal arg As Object)
            If (Not (Me.BeginStartPostProtocolloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BeginStartPostProtocolloCompleted(Me, New BeginStartPostProtocolloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://intranet.serviziocivile.it/Spedizioni", RequestNamespace:="http://intranet.serviziocivile.it", ResponseNamespace:="http://intranet.serviziocivile.it", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Spedizioni(ByVal Tipo As String, ByVal Cognome As String, ByVal Nome As String) As Boolean
            Dim results() As Object = Me.Invoke("Spedizioni", New Object() {Tipo, Cognome, Nome})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SpedizioniAsync(ByVal Tipo As String, ByVal Cognome As String, ByVal Nome As String)
            Me.SpedizioniAsync(Tipo, Cognome, Nome, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SpedizioniAsync(ByVal Tipo As String, ByVal Cognome As String, ByVal Nome As String, ByVal userState As Object)
            If (Me.SpedizioniOperationCompleted Is Nothing) Then
                Me.SpedizioniOperationCompleted = AddressOf Me.OnSpedizioniOperationCompleted
            End If
            Me.InvokeAsync("Spedizioni", New Object() {Tipo, Cognome, Nome}, Me.SpedizioniOperationCompleted, userState)
        End Sub
        
        Private Sub OnSpedizioniOperationCompleted(ByVal arg As Object)
            If (Not (Me.SpedizioniCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SpedizioniCompleted(Me, New SpedizioniCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://intranet.serviziocivile.it/InviaProtcolloPEC", RequestNamespace:="http://intranet.serviziocivile.it", ResponseNamespace:="http://intranet.serviziocivile.it", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InviaProtcolloPEC(ByVal Cognome As String, ByVal Nome As String, ByVal dataprot As String, ByVal protcollo As String, ByVal emailPEC As String) As Boolean
            Dim results() As Object = Me.Invoke("InviaProtcolloPEC", New Object() {Cognome, Nome, dataprot, protcollo, emailPEC})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InviaProtcolloPECAsync(ByVal Cognome As String, ByVal Nome As String, ByVal dataprot As String, ByVal protcollo As String, ByVal emailPEC As String)
            Me.InviaProtcolloPECAsync(Cognome, Nome, dataprot, protcollo, emailPEC, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InviaProtcolloPECAsync(ByVal Cognome As String, ByVal Nome As String, ByVal dataprot As String, ByVal protcollo As String, ByVal emailPEC As String, ByVal userState As Object)
            If (Me.InviaProtcolloPECOperationCompleted Is Nothing) Then
                Me.InviaProtcolloPECOperationCompleted = AddressOf Me.OnInviaProtcolloPECOperationCompleted
            End If
            Me.InvokeAsync("InviaProtcolloPEC", New Object() {Cognome, Nome, dataprot, protcollo, emailPEC}, Me.InviaProtcolloPECOperationCompleted, userState)
        End Sub
        
        Private Sub OnInviaProtcolloPECOperationCompleted(ByVal arg As Object)
            If (Not (Me.InviaProtcolloPECCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InviaProtcolloPECCompleted(Me, New InviaProtcolloPECCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub BeginStartPostProtocolloCompletedEventHandler(ByVal sender As Object, ByVal e As BeginStartPostProtocolloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BeginStartPostProtocolloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub SpedizioniCompletedEventHandler(ByVal sender As Object, ByVal e As SpedizioniCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SpedizioniCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub InviaProtcolloPECCompletedEventHandler(ByVal sender As Object, ByVal e As InviaProtcolloPECCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InviaProtcolloPECCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
