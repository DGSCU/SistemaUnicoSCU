//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DomandeOnline.Email {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Email.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/emailNew", ReplyAction="http://tempuri.org/IService/emailNewResponse")]
        bool emailNew(string indiOri, string indiDest, string oggetto, string corpo, string filetosend, bool produzione, string CC, bool isHtmlMail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/emailNew", ReplyAction="http://tempuri.org/IService/emailNewResponse")]
        System.Threading.Tasks.Task<bool> emailNewAsync(string indiOri, string indiDest, string oggetto, string corpo, string filetosend, bool produzione, string CC, bool isHtmlMail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/email", ReplyAction="http://tempuri.org/IService/emailResponse")]
        bool email(string indiOri, string indiDest, string oggetto, string corpo, string filetosend, bool produzione, string CC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/email", ReplyAction="http://tempuri.org/IService/emailResponse")]
        System.Threading.Tasks.Task<bool> emailAsync(string indiOri, string indiDest, string oggetto, string corpo, string filetosend, bool produzione, string CC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService/GetDataUsingDataContractResponse")]
        DomandeOnline.Email.CompositeType GetDataUsingDataContract(DomandeOnline.Email.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<DomandeOnline.Email.CompositeType> GetDataUsingDataContractAsync(DomandeOnline.Email.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : DomandeOnline.Email.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<DomandeOnline.Email.IService>, DomandeOnline.Email.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool emailNew(string indiOri, string indiDest, string oggetto, string corpo, string filetosend, bool produzione, string CC, bool isHtmlMail) {
            return base.Channel.emailNew(indiOri, indiDest, oggetto, corpo, filetosend, produzione, CC, isHtmlMail);
        }
        
        public System.Threading.Tasks.Task<bool> emailNewAsync(string indiOri, string indiDest, string oggetto, string corpo, string filetosend, bool produzione, string CC, bool isHtmlMail) {
            return base.Channel.emailNewAsync(indiOri, indiDest, oggetto, corpo, filetosend, produzione, CC, isHtmlMail);
        }
        
        public bool email(string indiOri, string indiDest, string oggetto, string corpo, string filetosend, bool produzione, string CC) {
            return base.Channel.email(indiOri, indiDest, oggetto, corpo, filetosend, produzione, CC);
        }
        
        public System.Threading.Tasks.Task<bool> emailAsync(string indiOri, string indiDest, string oggetto, string corpo, string filetosend, bool produzione, string CC) {
            return base.Channel.emailAsync(indiOri, indiDest, oggetto, corpo, filetosend, produzione, CC);
        }
        
        public DomandeOnline.Email.CompositeType GetDataUsingDataContract(DomandeOnline.Email.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<DomandeOnline.Email.CompositeType> GetDataUsingDataContractAsync(DomandeOnline.Email.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
